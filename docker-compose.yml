version: '3.9'
name: 'booker'

services:
  auth:
    build: ./services/auth
    restart: unless-stopped
    environment:
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: users-postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      MODE: ${MODE}
    ports:
      - "8080:8080"
    depends_on:
      - users-postgres
    networks:
      - booker-net
  backend:
    build: ./services/backend
    restart: unless-stopped
    environment:
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: users-postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      MODE: ${MODE}
    ports:
      - "8081:8080"
    depends_on:
      - users-postgres
    networks:
      - booker-net
  users-postgres:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    expose:
      - 5432
    volumes:
      - users-postgres-data:/var/lib/postgresql/data
    networks:
      - booker-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./services/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    depends_on:
      - auth
      - backend
    networks:
      - booker-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-changeme}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - ./services/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - booker-net

volumes:
  users-postgres-data:
    name: booker_users_postgres_data
  prometheus_data:
    name: booker_prometheus_data
  grafana_data:
    name: booker_grafana_data

networks:
  booker-net:
    driver: bridge
    name: booker_network